#%RAML 1.0
title: Facade API
version: v1
mediaType: application/json
baseUri: https://meta.inn.eu/revault
types:
  Status:
    type: object
    properties:
      statusCode: number
      processedBy:
        (private):
        type: string

  StatusRequest:
    type: object
    properties:
      serviceType: string

  TestRequest:
    type: object
    properties:
      mode: string
      resultType: string
      clientIp:
        (x-client-ip):
        type: string
      clientLanguage:
        (x-client-language):
        type: string

  ResourceRequest:
    type: object
    properties:
      url: string
      method: string

  ResourceState:
    type: object
    properties:
      content: string

  ResourceUpdate:
    type: object
    properties:
      update: string

  ReliableResourceState:
    type: object
    properties:
      revisionId: number
      content: string

  ReliableResourceUpdate:
    type: object
    properties:
      revisionId: number
      update: string

  User:
    type: object
    properties:
      fullName: string
      userName: string
      password:
        (private):
        type: string

  ComplexRequestType:
    type: object
    properties:
      name: string
      value:
        type: ComplexValue

  ComplexResponseType:
    type: object
    properties:
      name: string
      value:
        type: ComplexValue

  ComplexValue:
    type: object
    properties:
      address:
        (x-client-ip):
        type: string
      privateField:
        (private):
        type: string
      publicField: string

annotationTypes:
  x-client-ip:
  x-client-language:
  private:
  paged:
  rewrite:
  not-defined:

traits:
  secured:
  rateLimited:

/test-not-defined-filter:
  (not-defined):      

/users/{userId}:
  get:
    is: [ secured, rateLimited ]
    (paged):
    headers:
      authToken:
    responses:
      200:
        body:
          type: User
        headers:
          content-type:
  put:
    is: [ secured ]
    body:
      application/json:
        type: User

/status:
  get:
    headers:
      authToken:
    responses:
      200:
        body:
          type: Status
        headers:
          content-type:
  post:
    is: [ rateLimited ]
    (paged):
    body:
      type: StatusRequest
    headers:
      authToken:
    responses:
      200:
        body:
          type: Status
        headers:
          content-type:

  /test-service:
    get:
      (paged):
      body:
        type: TestRequest
      headers:
        authToken:
      responses:
        200:
          body:
            type: Status
          headers:
            content-type:
        404:
          body:
            type: string

/private:
  (private):

/unreliable-feed/{content}:
  post:
    body:
      application/vnd.app-server-status+json:
        type: ResourceState
      application/vnd.app-server-status-update+json:
        type: ResourceUpdate

/reliable-feed/{content:*}:
  post:
    body:
      application/json:
        type: TestRequest
      application/vnd.app-server-status+json:
        type: ReliableResourceState
      application/vnd.app-server-status-update+json:
        type: ReliableResourceUpdate

/test-service/reliable:
  post:

/test-service/unreliable:
  post:

/perf-test-service/ws:
  post:

/revault/content/{path:*}:
  uriParameters:
    path:*: string

/test-rewrite/some-service:
  (rewrite):
    uri: /status/test-service

/test-rewrite-with-args/some-service/{arg}:
  (rewrite):
    uri: /status/test-service/{arg}

/test-rewrite-method/some-service:
  get:
  put:
    (rewrite):
      uri: /revault/content/some-service

/test-rewrite/some-service/{serviceId}:
  (rewrite):
    uri: /rewritten/some-service/{serviceId}

/rewritten/some-service/{serviceId}:

/complex-resource:
  post:
    body:
      type: ComplexRequestType
    responses:
      200:
        body:
          type: ComplexResponseType

/parent:
  (rewrite):
    uri: /revault/content/some-service

  /child:

/parent/external-child: