inn {
  facade {
    rest-api.host = "localhost"
    rest-api.port = "54321"
    http.max-connections = 40000
    raml.file = "facade-config.raml"
    filters {
      privateResource: eu.inn.facade.filter.PrivateResourceFilter
    }
    maxResubscriptionsCount = 10
    shutdown-timeout = 10s
  }

  util {
    http.rest-service {
      access-log.enabled = false
      cors.allowed-origins = [
        "localhost"
        "127.0.0.1"
      ]
      cors.allowed-paths = [
        "/users/\\w+/trackings"
      ]
    }
    graphite {
      enabled = true
      host = "graphite"
      port = 12345
      prefix = "hyperbus-facade"
      host-suffix = "monitoring"
      report-period = 1000
    }
  }
}

actor-system-registry {
  eu-inn {
    akka-system-name = eu-inn
    akka {
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }
//      cluster.seed-nodes = [
//        "akka.tcp://eu-inn@127.0.0.1:10000"
//      ]
      remote {
        netty.tcp.port = 10004
        netty.tcp.hostname = 127.0.0.1
        log-remote-lifecycle-events = off
      }
      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus {
  transports: {
    akka-cluster-client {
      class-name = DistributedAkkaClientTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    akka-cluster-server {
      class-name = DistributedAkkaServerTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    kafka-client: {
      class-name: KafkaClientTransport,
      configuration: {
        routes: [
          {kafka.topic: test-service}
        ]
        producer.bootstrap.servers: "localhost:9092"
      }
    }
    kafka-server: {
      class-name: KafkaServerTransport,
      configuration: {
        routes: [
          {kafka.topic: test-service}
        ]
        consumer.zookeeper.connect: "localhost:2181"
        consumer.auto.offset.reset: smallest
      }
    }
  }
  client-routes: [
    {
      match.headers: {
        method: { value: "^feed:.*$", type: Regex }
      }
      transport: kafka-client
    }
    {transport: akka-cluster-client}
  ]
  server-routes: [
    {
      match.headers: {
        method: { value: "^feed:.*$", type: Regex }
      }
      transport: kafka-server
    }
    {transport: akka-cluster-server}
  ]
  facade.group-name = "127.0.0.1-10004"
}

perf-test {
  host = "localhost"
  port = 54321
  ws {
    endpoint = "/perf-test-service/ws"
    loader-count = 200
    connection-failure-rate = 0.5
    load-iteration-interval-seconds = 10
    session-length-seconds = 14400
  }
  events-per-second = 100
}