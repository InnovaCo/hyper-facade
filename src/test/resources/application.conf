hyper-facade {
  raml {
    file = facade-config.raml
    root-path = "/v3"
    strict-config = false
  }
  hyperbus.group-name = "127.0.0.1-10004"
  max-subscription-tries = 10
  rewrite-count-limit = 5
  shutdown-timeout = 20s
  http-transport {
    host = "localhost"
    port = "54321"
    max-connections = 500
    access-log.enabled = false
    cors.allowed-origins = [
      "localhost"
      "127.0.0.1"
    ]
    cors.allowed-paths = [
      "/users/\\w+/trackings"
    ]
  }

  inject-modules: [eu.inn.facade.modules.ExtraFiltersModule]
}

spray.can.server.remote-address-header=on
actor-system-registry {
  eu-inn {
    akka-system-name = eu-inn
    akka {
      executor = "thread-pool-executor"
      thread-pool-executor.core-pool-size-max = 64
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }
//      cluster.seed-nodes = ["akka.tcp://eu-inn@127.0.0.1:10000"]
      remote {
        netty.tcp.port = 10002
        netty.tcp.hostname = 127.0.0.1
        log-remote-lifecycle-events = off
      }
      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus {
  transports: {
    akka-cluster-client {
      class-name = DistributedAkkaClientTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    akka-cluster-server {
      class-name = DistributedAkkaServerTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    kafka-client: {
      class-name: KafkaClientTransport,
      configuration: {
        routes: [
          {kafka.topic: test-service}
        ]
        producer.bootstrap.servers: "localhost:9092"
      }
    }
    kafka-server: {
      class-name: KafkaServerTransport,
      configuration: {
        routes: [
          {kafka.topic: test-service}
        ]
        consumer.zookeeper.connect: "localhost:2181"
        consumer.auto.offset.reset: smallest
      }
    }
  }
  client-routes: [
    {
      match.headers: {
        method: { value: "^feed:.*$", type: Regex }
      }
      transport: kafka-client
    }
    {transport: akka-cluster-client}
  ]
  server-routes: [
    {
      match.headers: {
        method: { value: "^feed:.*$", type: Regex }
      }
      transport: kafka-server
    }
    {transport: akka-cluster-server}
  ]
}

auth-service {
  basic: [
    {admin: {password: "admin", id: 1, roles: ["admin"]}}
    {qa: {password: "qa", id: 2, roles: ["qa", "user"]}}
  ]
}

perf-test {
  host = "localhost"
  port = 54321
  ws {
    endpoint = "/perf-test-with-filters/ws"
    loader-count = 1
    connection-failure-rate = 0
    load-iteration-interval-seconds = 10
    session-length-seconds = 100
  }
  events-per-second = 1
}
