hyperbus-facade {
  raml-file = ${raml.config.file-path}    # specify in a command line -Draml.config.file-path=...
  hyperbus.group-name = "127.0.0.1-10004"
  max-resubscriptions = 10
  shutdown-timeout = 10s
  http-transport {
    host = "localhost"
    port = "54321"
    max-connections = 40000
    access-log.enabled = false
    cors.allowed-origins = []
    cors.allowed-paths = []
  }
  graphite {
    enabled = false
    host = "graphite"
    port = 12345
    prefix = "hyperbus-facade"
    host-suffix = "monitoring"
    report-period = 1000
  }
  inject-modules: []
  private {
    addresses: [
      "127.0.0.1"
    ]
    networks: [
      {"from": "192.168.0.1", "to": "192.168.0.5"}
    ]
  }
}
spray.can.server.remote-address-header = on

actor-system-registry {
  eu-inn {
    akka-system-name = eu-inn
    akka {
      actor {
        provider = "akka.cluster.ClusterActorRefProvider"
      }
      cluster.seed-nodes = [
        "akka.tcp://eu-inn@127.0.0.1:10000"
      ]
      remote {
        netty.tcp.port = 10004
        netty.tcp.hostname = 127.0.0.1
        log-remote-lifecycle-events = off
      }
      contrib.cluster.pub-sub {
        name = distributedPubSubMediator
        role = ""
        gossip-interval = 1s
        removed-time-to-live = 120s
      }
    }
  }
}

hyperbus {
  transports: {
    akka-cluster-client {
      class-name = DistributedAkkaClientTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    akka-cluster-server {
      class-name = DistributedAkkaServerTransport,
      configuration = ${actor-system-registry.eu-inn}
    }
    kafka-client: {
      class-name: KafkaClientTransport,
      configuration: {
        routes: [
          {kafka.topic: hyperbus}
        ]
        producer.bootstrap.servers: "localhost:9092"
      }
    }
    kafka-server: {
      class-name: KafkaServerTransport,
      configuration: {
        routes: [
          {kafka.topic: hyperbus}
        ]
        consumer.zookeeper.connect: "localhost:2181"
        consumer.auto.offset.reset: smallest
      }
    }
  }
  client-routes: [
    {
      match.headers: {
        method: {value: "^feed:.*$", type: Regex}
      }
      transport: kafka-client
    }
    {transport: akka-cluster-client}
  ]
  server-routes: [
    {
      match.headers: {
        method: {value: "^feed:.*$", type: Regex}
      }
      transport: kafka-server
    }
    {transport: akka-cluster-server}
  ]
}
